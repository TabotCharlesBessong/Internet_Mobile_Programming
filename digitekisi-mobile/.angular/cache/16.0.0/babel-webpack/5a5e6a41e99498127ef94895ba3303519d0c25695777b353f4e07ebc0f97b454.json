{"ast":null,"code":"import { signal } from '@angular/core';\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport * as i0 from \"@angular/core\";\nclass ResetPasswordComponent {\n  constructor() {\n    this.passwordIsVisible = signal({\n      newPasswordState: false,\n      confirmPasswordState: false\n    });\n    this.resetPasswordState = new FormGroup({\n      verificationCode: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(6)]),\n      newPassword: new FormControl('', [Validators.required, Validators.email]),\n      confirmPassword: new FormControl('', [Validators.required, Validators.minLength(7)])\n    });\n  }\n  ngOnInit() {}\n  changePassState(type) {\n    this.passwordIsVisible.set({\n      newPasswordState: type === 'newPassword' ? true : false\n    });\n  }\n}\nResetPasswordComponent.ɵfac = function ResetPasswordComponent_Factory(t) {\n  return new (t || ResetPasswordComponent)();\n};\nResetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResetPasswordComponent,\n  selectors: [[\"app-reset-password\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 2,\n  vars: 0,\n  template: function ResetPasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \" reset-password works!\\n\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [IonicModule, FormsModule, ReactiveFormsModule],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZXNldC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9jb21wb25lbnRzL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSw0S0FBNEsiLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { ResetPasswordComponent };","map":{"version":3,"names":["signal","FormControl","FormGroup","FormsModule","ReactiveFormsModule","Validators","IonicModule","ResetPasswordComponent","constructor","passwordIsVisible","newPasswordState","confirmPasswordState","resetPasswordState","verificationCode","required","minLength","maxLength","newPassword","email","confirmPassword","ngOnInit","changePassState","type","set","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","template","ResetPasswordComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles"],"sources":["/home/yimnai_dev/PROJECTS/fet/Internet_Mobile_Programming/digitekisi-mobile/src/app/auth/components/reset-password/reset-password.component.ts","/home/yimnai_dev/PROJECTS/fet/Internet_Mobile_Programming/digitekisi-mobile/src/app/auth/components/reset-password/reset-password.component.html"],"sourcesContent":["import { NgIf } from '@angular/common';\nimport { Component, OnInit, signal } from '@angular/core';\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n  standalone: true,\n  imports: [IonicModule, RouterLink, NgIf, FormsModule, ReactiveFormsModule]\n})\nexport class ResetPasswordComponent  implements OnInit {\n\n  passwordIsVisible = signal({\n    newPasswordState: false,\n    confirmPasswordState: false,\n  })\n\n  resetPasswordState: FormGroup = new FormGroup({\n    verificationCode: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(6)]),\n    newPassword: new FormControl('', [Validators.required, Validators.email]),\n    confirmPassword: new FormControl('', [Validators.required, Validators.minLength(7)]),\n  })\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  changePassState(type: 'newPassword' | 'confirmPassword') {\n    this.passwordIsVisible.set({\n      newPasswordState: type === 'newPassword' ? true : false,\n    })\n  }\n\n}\n","<p>\n  reset-password works!\n</p>\n"],"mappings":"AACA,SAA4BA,MAAM,QAAQ,eAAe;AACzD,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,EAAEC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AAErG,SAASC,WAAW,QAAQ,gBAAgB;;AAE5C,MAOaC,sBAAsB;EAajCC,YAAA;IAXA,KAAAC,iBAAiB,GAAGT,MAAM,CAAC;MACzBU,gBAAgB,EAAE,KAAK;MACvBC,oBAAoB,EAAE;KACvB,CAAC;IAEF,KAAAC,kBAAkB,GAAc,IAAIV,SAAS,CAAC;MAC5CW,gBAAgB,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACI,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,EAAEV,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9GC,WAAW,EAAE,IAAIhB,WAAW,CAAC,EAAE,EAAE,CAACI,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACa,KAAK,CAAC,CAAC;MACzEC,eAAe,EAAE,IAAIlB,WAAW,CAAC,EAAE,EAAE,CAACI,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC;KACpF,CAAC;EAEc;EAEhBK,QAAQA,CAAA,GAAI;EAEZC,eAAeA,CAACC,IAAuC;IACrD,IAAI,CAACb,iBAAiB,CAACc,GAAG,CAAC;MACzBb,gBAAgB,EAAEY,IAAI,KAAK,aAAa,GAAG,IAAI,GAAG;KACnD,CAAC;EACJ;;AArBWf,sBAAsB,C;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB,C;QAAtBA,sBAAsB;EAAAiB,SAAA;EAAAC,UAAA;EAAAC,QAAA,GAAAC,EAAA,CAAAC,mBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCbnCN,EAAA,CAAAQ,cAAA,QAAG;MACDR,EAAA,CAAAS,MAAA,+BACF;MAAAT,EAAA,CAAAU,YAAA,EAAI;;;iBDSQ/B,WAAW,EAAoBH,WAAW,EAAEC,mBAAmB;EAAAkC,MAAA;AAAA;SAE9D/B,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}