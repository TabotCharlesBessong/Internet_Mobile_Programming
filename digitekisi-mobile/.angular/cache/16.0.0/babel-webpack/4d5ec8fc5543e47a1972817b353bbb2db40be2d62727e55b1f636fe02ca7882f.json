{"ast":null,"code":"import _asyncToGenerator from \"/home/yimnai_dev/PROJECTS/fet/Internet_Mobile_Programming/digitekisi-mobile/node_modules/.pnpm/@babel+runtime@7.21.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CapacitorGoogleMaps } from './implementation';\nexport class LatLngBounds {\n  constructor(bounds) {\n    this.southwest = bounds.southwest;\n    this.center = bounds.center;\n    this.northeast = bounds.northeast;\n  }\n  contains(point) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const result = yield CapacitorGoogleMaps.mapBoundsContains({\n        bounds: _this,\n        point\n      });\n      return result['contains'];\n    })();\n  }\n  extend(point) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const result = yield CapacitorGoogleMaps.mapBoundsExtend({\n        bounds: _this2,\n        point\n      });\n      _this2.southwest = result['bounds']['southwest'];\n      _this2.center = result['bounds']['center'];\n      _this2.northeast = result['bounds']['northeast'];\n      return _this2;\n    })();\n  }\n}\nexport var MapType;\n(function (MapType) {\n  /**\n   * Basic map.\n   */\n  MapType[\"Normal\"] = \"Normal\";\n  /**\n   * Satellite imagery with roads and labels.\n   */\n  MapType[\"Hybrid\"] = \"Hybrid\";\n  /**\n   * Satellite imagery with no labels.\n   */\n  MapType[\"Satellite\"] = \"Satellite\";\n  /**\n   * Topographic data.\n   */\n  MapType[\"Terrain\"] = \"Terrain\";\n  /**\n   * No base map tiles.\n   */\n  MapType[\"None\"] = \"None\";\n})(MapType || (MapType = {}));","map":{"version":3,"names":["CapacitorGoogleMaps","LatLngBounds","constructor","bounds","southwest","center","northeast","contains","point","_this","_asyncToGenerator","result","mapBoundsContains","extend","_this2","mapBoundsExtend","MapType"],"sources":["/home/yimnai_dev/PROJECTS/fet/Internet_Mobile_Programming/digitekisi-mobile/node_modules/.pnpm/@capacitor+google-maps@5.1.2_@capacitor+core@5.0.5/node_modules/@capacitor/google-maps/dist/esm/definitions.js"],"sourcesContent":["import { CapacitorGoogleMaps } from './implementation';\nexport class LatLngBounds {\n    constructor(bounds) {\n        this.southwest = bounds.southwest;\n        this.center = bounds.center;\n        this.northeast = bounds.northeast;\n    }\n    async contains(point) {\n        const result = await CapacitorGoogleMaps.mapBoundsContains({\n            bounds: this,\n            point,\n        });\n        return result['contains'];\n    }\n    async extend(point) {\n        const result = await CapacitorGoogleMaps.mapBoundsExtend({\n            bounds: this,\n            point,\n        });\n        this.southwest = result['bounds']['southwest'];\n        this.center = result['bounds']['center'];\n        this.northeast = result['bounds']['northeast'];\n        return this;\n    }\n}\nexport var MapType;\n(function (MapType) {\n    /**\n     * Basic map.\n     */\n    MapType[\"Normal\"] = \"Normal\";\n    /**\n     * Satellite imagery with roads and labels.\n     */\n    MapType[\"Hybrid\"] = \"Hybrid\";\n    /**\n     * Satellite imagery with no labels.\n     */\n    MapType[\"Satellite\"] = \"Satellite\";\n    /**\n     * Topographic data.\n     */\n    MapType[\"Terrain\"] = \"Terrain\";\n    /**\n     * No base map tiles.\n     */\n    MapType[\"None\"] = \"None\";\n})(MapType || (MapType = {}));\n"],"mappings":";AAAA,SAASA,mBAAmB,QAAQ,kBAAkB;AACtD,OAAO,MAAMC,YAAY,CAAC;EACtBC,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACC,SAAS,GAAGD,MAAM,CAACC,SAAS;IACjC,IAAI,CAACC,MAAM,GAAGF,MAAM,CAACE,MAAM;IAC3B,IAAI,CAACC,SAAS,GAAGH,MAAM,CAACG,SAAS;EACrC;EACMC,QAAQA,CAACC,KAAK,EAAE;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAClB,MAAMC,MAAM,SAASX,mBAAmB,CAACY,iBAAiB,CAAC;QACvDT,MAAM,EAAEM,KAAI;QACZD;MACJ,CAAC,CAAC;MACF,OAAOG,MAAM,CAAC,UAAU,CAAC;IAAC;EAC9B;EACME,MAAMA,CAACL,KAAK,EAAE;IAAA,IAAAM,MAAA;IAAA,OAAAJ,iBAAA;MAChB,MAAMC,MAAM,SAASX,mBAAmB,CAACe,eAAe,CAAC;QACrDZ,MAAM,EAAEW,MAAI;QACZN;MACJ,CAAC,CAAC;MACFM,MAAI,CAACV,SAAS,GAAGO,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC;MAC9CG,MAAI,CAACT,MAAM,GAAGM,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC;MACxCG,MAAI,CAACR,SAAS,GAAGK,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC;MAC9C,OAAOG,MAAI;IAAC;EAChB;AACJ;AACA,OAAO,IAAIE,OAAO;AAClB,CAAC,UAAUA,OAAO,EAAE;EAChB;AACJ;AACA;EACIA,OAAO,CAAC,QAAQ,CAAC,GAAG,QAAQ;EAC5B;AACJ;AACA;EACIA,OAAO,CAAC,QAAQ,CAAC,GAAG,QAAQ;EAC5B;AACJ;AACA;EACIA,OAAO,CAAC,WAAW,CAAC,GAAG,WAAW;EAClC;AACJ;AACA;EACIA,OAAO,CAAC,SAAS,CAAC,GAAG,SAAS;EAC9B;AACJ;AACA;EACIA,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM;AAC5B,CAAC,EAAEA,OAAO,KAAKA,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}