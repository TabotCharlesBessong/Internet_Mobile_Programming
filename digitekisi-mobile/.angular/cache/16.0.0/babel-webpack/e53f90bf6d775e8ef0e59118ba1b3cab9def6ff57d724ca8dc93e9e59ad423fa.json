{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgIf } from '@angular/common';\nimport { Component, signal } from '@angular/core';\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nlet ResetPasswordComponent = class ResetPasswordComponent {\n  constructor() {\n    this.passwordIsVisible = signal({\n      newPasswordState: false,\n      confirmPasswordState: false\n    });\n    this.resetPasswordForm = new FormGroup({\n      verificationCode: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(6)]),\n      newPassword: new FormControl('', [Validators.required, Validators.email]),\n      confirmPassword: new FormControl('', [Validators.required, Validators.minLength(7)])\n    });\n  }\n  ngOnInit() {}\n  changePassState(type) {\n    this.passwordIsVisible.set({\n      newPasswordState: type === 'newPassword' ? !this.passwordIsVisible().newPasswordState : this.passwordIsVisible().newPasswordState,\n      confirmPasswordState: type === 'confirmPassword' ? !this.passwordIsVisible().confirmPasswordState : this.passwordIsVisible().confirmPasswordState\n    });\n  }\n  onPasswordReset() {}\n};\nResetPasswordComponent = __decorate([Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n  standalone: true,\n  imports: [IonicModule, RouterLink, NgIf, FormsModule, ReactiveFormsModule]\n})], ResetPasswordComponent);\nexport { ResetPasswordComponent };","map":{"version":3,"names":["NgIf","Component","signal","FormControl","FormGroup","FormsModule","ReactiveFormsModule","Validators","RouterLink","IonicModule","ResetPasswordComponent","constructor","passwordIsVisible","newPasswordState","confirmPasswordState","resetPasswordForm","verificationCode","required","minLength","maxLength","newPassword","email","confirmPassword","ngOnInit","changePassState","type","set","onPasswordReset","__decorate","selector","templateUrl","styleUrls","standalone","imports"],"sources":["/home/yimnai_dev/PROJECTS/fet/Internet_Mobile_Programming/digitekisi-mobile/src/app/auth/components/reset-password/reset-password.component.ts"],"sourcesContent":["import { NgIf } from '@angular/common';\nimport { Component, OnInit, signal } from '@angular/core';\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n  standalone: true,\n  imports: [IonicModule, RouterLink, NgIf, FormsModule, ReactiveFormsModule]\n})\nexport class ResetPasswordComponent  implements OnInit {\n\n  passwordIsVisible = signal({\n    newPasswordState: false,\n    confirmPasswordState: false,\n  })\n\n  resetPasswordForm: FormGroup = new FormGroup({\n    verificationCode: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(6)]),\n    newPassword: new FormControl('', [Validators.required, Validators.email]),\n    confirmPassword: new FormControl('', [Validators.required, Validators.minLength(7)]),\n  })\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  changePassState(type: 'newPassword' | 'confirmPassword') {\n    this.passwordIsVisible.set({\n      newPasswordState: type === 'newPassword' ? !this.passwordIsVisible().newPasswordState : this.passwordIsVisible().newPasswordState,\n      confirmPasswordState: type === 'confirmPassword' ? !this.passwordIsVisible().confirmPasswordState : this.passwordIsVisible().confirmPasswordState\n    })\n  }\n\n  onPasswordReset(){}\n\n}\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,iBAAiB;AACtC,SAASC,SAAS,EAAUC,MAAM,QAAQ,eAAe;AACzD,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,EAAEC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AACrG,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,WAAW,QAAQ,gBAAgB;AAS5C,IAAaC,sBAAsB,GAAnC,MAAaA,sBAAsB;EAajCC,YAAA;IAXA,KAAAC,iBAAiB,GAAGV,MAAM,CAAC;MACzBW,gBAAgB,EAAE,KAAK;MACvBC,oBAAoB,EAAE;KACvB,CAAC;IAEF,KAAAC,iBAAiB,GAAc,IAAIX,SAAS,CAAC;MAC3CY,gBAAgB,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CAACI,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,EAAEX,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9GC,WAAW,EAAE,IAAIjB,WAAW,CAAC,EAAE,EAAE,CAACI,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACc,KAAK,CAAC,CAAC;MACzEC,eAAe,EAAE,IAAInB,WAAW,CAAC,EAAE,EAAE,CAACI,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC;KACpF,CAAC;EAEc;EAEhBK,QAAQA,CAAA,GAAI;EAEZC,eAAeA,CAACC,IAAuC;IACrD,IAAI,CAACb,iBAAiB,CAACc,GAAG,CAAC;MACzBb,gBAAgB,EAAEY,IAAI,KAAK,aAAa,GAAG,CAAC,IAAI,CAACb,iBAAiB,EAAE,CAACC,gBAAgB,GAAG,IAAI,CAACD,iBAAiB,EAAE,CAACC,gBAAgB;MACjIC,oBAAoB,EAAEW,IAAI,KAAK,iBAAiB,GAAG,CAAC,IAAI,CAACb,iBAAiB,EAAE,CAACE,oBAAoB,GAAG,IAAI,CAACF,iBAAiB,EAAE,CAACE;KAC9H,CAAC;EACJ;EAEAa,eAAeA,CAAA,GAAG;CAEnB;AA1BYjB,sBAAsB,GAAAkB,UAAA,EAPlC3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,iCAAiC,CAAC;EAC9CC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACxB,WAAW,EAAED,UAAU,EAAER,IAAI,EAAEK,WAAW,EAAEC,mBAAmB;CAC1E,CAAC,C,EACWI,sBAAsB,CA0BlC;SA1BYA,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}