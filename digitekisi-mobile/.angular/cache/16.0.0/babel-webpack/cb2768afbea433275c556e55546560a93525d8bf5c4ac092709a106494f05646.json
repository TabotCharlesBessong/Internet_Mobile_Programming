{"ast":null,"code":"import _asyncToGenerator from \"/home/yimnai_dev/PROJECTS/fet/Internet_Mobile_Programming/digitekisi-mobile/node_modules/.pnpm/@babel+runtime@7.21.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Capacitor } from '@capacitor/core';\nimport { LatLngBounds, MapType } from './definitions';\nimport { CapacitorGoogleMaps } from './implementation';\nclass MapCustomElement extends HTMLElement {\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    if (Capacitor.getPlatform() == 'ios') {\n      this.style.overflow = 'scroll';\n      this.style['-webkit-overflow-scrolling'] = 'touch';\n      const overflowDiv = document.createElement('div');\n      overflowDiv.style.height = '200%';\n      this.appendChild(overflowDiv);\n    }\n  }\n}\ncustomElements.define('capacitor-google-map', MapCustomElement);\nexport class GoogleMap {\n  constructor(id) {\n    this.element = null;\n    this.handleScrollEvent = () => this.updateMapBounds();\n    this.id = id;\n  }\n  /**\n   * Creates a new instance of a Google Map\n   * @param options\n   * @param callback\n   * @returns GoogleMap\n   */\n  static create(options, callback) {\n    return _asyncToGenerator(function* () {\n      const newMap = new GoogleMap(options.id);\n      if (!options.element) {\n        throw new Error('container element is required');\n      }\n      if (options.config.androidLiteMode === undefined) {\n        options.config.androidLiteMode = false;\n      }\n      newMap.element = options.element;\n      newMap.element.dataset.internalId = options.id;\n      const elementBounds = yield GoogleMap.getElementBounds(options.element);\n      options.config.width = elementBounds.width;\n      options.config.height = elementBounds.height;\n      options.config.x = elementBounds.x;\n      options.config.y = elementBounds.y;\n      options.config.devicePixelRatio = window.devicePixelRatio;\n      if (Capacitor.getPlatform() == 'android') {\n        newMap.initScrolling();\n      }\n      if (Capacitor.isNativePlatform()) {\n        options.element = {};\n      }\n      yield CapacitorGoogleMaps.create(options);\n      if (callback) {\n        const onMapReadyListener = yield CapacitorGoogleMaps.addListener('onMapReady', data => {\n          if (data.mapId == newMap.id) {\n            callback(data);\n            onMapReadyListener.remove();\n          }\n        });\n      }\n      return newMap;\n    })();\n  }\n  static getElementBounds(element) {\n    return _asyncToGenerator(function* () {\n      return new Promise(resolve => {\n        let elementBounds = element.getBoundingClientRect();\n        if (elementBounds.width == 0) {\n          let retries = 0;\n          const boundsInterval = setInterval(function () {\n            if (elementBounds.width == 0 && retries < 30) {\n              elementBounds = element.getBoundingClientRect();\n              retries++;\n            } else {\n              if (retries == 30) {\n                console.warn('Map size could not be determined');\n              }\n              clearInterval(boundsInterval);\n              resolve(elementBounds);\n            }\n          }, 100);\n        } else {\n          resolve(elementBounds);\n        }\n      });\n    })();\n  }\n  /**\n   * Enable marker clustering\n   *\n   * @param minClusterSize - The minimum number of markers that can be clustered together.\n   * @defaultValue 4\n   *\n   * @returns void\n   */\n  enableClustering(minClusterSize) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.enableClustering({\n        id: _this.id,\n        minClusterSize\n      });\n    })();\n  }\n  /**\n   * Disable marker clustering\n   *\n   * @returns void\n   */\n  disableClustering() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.disableClustering({\n        id: _this2.id\n      });\n    })();\n  }\n  /**\n   * Adds a marker to the map\n   *\n   * @param marker\n   * @returns created marker id\n   */\n  addMarker(marker) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const res = yield CapacitorGoogleMaps.addMarker({\n        id: _this3.id,\n        marker\n      });\n      return res.id;\n    })();\n  }\n  /**\n   * Adds multiple markers to the map\n   *\n   * @param markers\n   * @returns array of created marker IDs\n   */\n  addMarkers(markers) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const res = yield CapacitorGoogleMaps.addMarkers({\n        id: _this4.id,\n        markers\n      });\n      return res.ids;\n    })();\n  }\n  /**\n   * Remove marker from the map\n   *\n   * @param id id of the marker to remove from the map\n   * @returns\n   */\n  removeMarker(id) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.removeMarker({\n        id: _this5.id,\n        markerId: id\n      });\n    })();\n  }\n  /**\n   * Remove markers from the map\n   *\n   * @param ids array of ids to remove from the map\n   * @returns\n   */\n  removeMarkers(ids) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.removeMarkers({\n        id: _this6.id,\n        markerIds: ids\n      });\n    })();\n  }\n  addPolygons(polygons) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      const res = yield CapacitorGoogleMaps.addPolygons({\n        id: _this7.id,\n        polygons\n      });\n      return res.ids;\n    })();\n  }\n  addPolylines(polylines) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      const res = yield CapacitorGoogleMaps.addPolylines({\n        id: _this8.id,\n        polylines\n      });\n      return res.ids;\n    })();\n  }\n  removePolygons(ids) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.removePolygons({\n        id: _this9.id,\n        polygonIds: ids\n      });\n    })();\n  }\n  addCircles(circles) {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      const res = yield CapacitorGoogleMaps.addCircles({\n        id: _this10.id,\n        circles\n      });\n      return res.ids;\n    })();\n  }\n  removeCircles(ids) {\n    var _this11 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.removeCircles({\n        id: _this11.id,\n        circleIds: ids\n      });\n    })();\n  }\n  removePolylines(ids) {\n    var _this12 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.removePolylines({\n        id: _this12.id,\n        polylineIds: ids\n      });\n    })();\n  }\n  /**\n   * Destroy the current instance of the map\n   */\n  destroy() {\n    var _this13 = this;\n    return _asyncToGenerator(function* () {\n      if (Capacitor.getPlatform() == 'android') {\n        _this13.disableScrolling();\n      }\n      _this13.removeAllMapListeners();\n      return CapacitorGoogleMaps.destroy({\n        id: _this13.id\n      });\n    })();\n  }\n  /**\n   * Update the map camera configuration\n   *\n   * @param config\n   * @returns\n   */\n  setCamera(config) {\n    var _this14 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.setCamera({\n        id: _this14.id,\n        config\n      });\n    })();\n  }\n  getMapType() {\n    var _this15 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        type\n      } = yield CapacitorGoogleMaps.getMapType({\n        id: _this15.id\n      });\n      return MapType[type];\n    })();\n  }\n  /**\n   * Sets the type of map tiles that should be displayed.\n   *\n   * @param mapType\n   * @returns\n   */\n  setMapType(mapType) {\n    var _this16 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.setMapType({\n        id: _this16.id,\n        mapType\n      });\n    })();\n  }\n  /**\n   * Sets whether indoor maps are shown, where available.\n   *\n   * @param enabled\n   * @returns\n   */\n  enableIndoorMaps(enabled) {\n    var _this17 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.enableIndoorMaps({\n        id: _this17.id,\n        enabled\n      });\n    })();\n  }\n  /**\n   * Controls whether the map is drawing traffic data, if available.\n   *\n   * @param enabled\n   * @returns\n   */\n  enableTrafficLayer(enabled) {\n    var _this18 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.enableTrafficLayer({\n        id: _this18.id,\n        enabled\n      });\n    })();\n  }\n  /**\n   * Show accessibility elements for overlay objects, such as Marker and Polyline.\n   *\n   * Only available on iOS.\n   *\n   * @param enabled\n   * @returns\n   */\n  enableAccessibilityElements(enabled) {\n    var _this19 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.enableAccessibilityElements({\n        id: _this19.id,\n        enabled\n      });\n    })();\n  }\n  /**\n   * Set whether the My Location dot and accuracy circle is enabled.\n   *\n   * @param enabled\n   * @returns\n   */\n  enableCurrentLocation(enabled) {\n    var _this20 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.enableCurrentLocation({\n        id: _this20.id,\n        enabled\n      });\n    })();\n  }\n  /**\n   * Set padding on the 'visible' region of the view.\n   *\n   * @param padding\n   * @returns\n   */\n  setPadding(padding) {\n    var _this21 = this;\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.setPadding({\n        id: _this21.id,\n        padding\n      });\n    })();\n  }\n  /**\n   * Get the map's current viewport latitude and longitude bounds.\n   *\n   * @returns {LatLngBounds}\n   */\n  getMapBounds() {\n    var _this22 = this;\n    return _asyncToGenerator(function* () {\n      return new LatLngBounds(yield CapacitorGoogleMaps.getMapBounds({\n        id: _this22.id\n      }));\n    })();\n  }\n  initScrolling() {\n    const ionContents = document.getElementsByTagName('ion-content');\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < ionContents.length; i++) {\n      ionContents[i].scrollEvents = true;\n    }\n    window.addEventListener('ionScroll', this.handleScrollEvent);\n    window.addEventListener('scroll', this.handleScrollEvent);\n    window.addEventListener('resize', this.handleScrollEvent);\n    if (screen.orientation) {\n      screen.orientation.addEventListener('change', () => {\n        setTimeout(this.updateMapBounds, 500);\n      });\n    } else {\n      window.addEventListener('orientationchange', () => {\n        setTimeout(this.updateMapBounds, 500);\n      });\n    }\n  }\n  disableScrolling() {\n    window.removeEventListener('ionScroll', this.handleScrollEvent);\n    window.removeEventListener('scroll', this.handleScrollEvent);\n    window.removeEventListener('resize', this.handleScrollEvent);\n    if (screen.orientation) {\n      screen.orientation.removeEventListener('change', () => {\n        setTimeout(this.updateMapBounds, 1000);\n      });\n    } else {\n      window.removeEventListener('orientationchange', () => {\n        setTimeout(this.updateMapBounds, 1000);\n      });\n    }\n  }\n  updateMapBounds() {\n    if (this.element) {\n      const mapRect = this.element.getBoundingClientRect();\n      CapacitorGoogleMaps.onScroll({\n        id: this.id,\n        mapBounds: {\n          x: mapRect.x,\n          y: mapRect.y,\n          width: mapRect.width,\n          height: mapRect.height\n        }\n      });\n    }\n  }\n  /*\n  private findContainerElement(): HTMLElement | null {\n    if (!this.element) {\n      return null;\n    }\n       let parentElement = this.element.parentElement;\n    while (parentElement !== null) {\n      if (window.getComputedStyle(parentElement).overflowY !== 'hidden') {\n        return parentElement;\n      }\n         parentElement = parentElement.parentElement;\n    }\n       return null;\n  }\n  */\n  /**\n   * Set the event listener on the map for 'onCameraIdle' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnCameraIdleListener(callback) {\n    var _this23 = this;\n    return _asyncToGenerator(function* () {\n      if (_this23.onCameraIdleListener) {\n        _this23.onCameraIdleListener.remove();\n      }\n      if (callback) {\n        _this23.onCameraIdleListener = yield CapacitorGoogleMaps.addListener('onCameraIdle', _this23.generateCallback(callback));\n      } else {\n        _this23.onCameraIdleListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onBoundsChanged' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnBoundsChangedListener(callback) {\n    var _this24 = this;\n    return _asyncToGenerator(function* () {\n      if (_this24.onBoundsChangedListener) {\n        _this24.onBoundsChangedListener.remove();\n      }\n      if (callback) {\n        _this24.onBoundsChangedListener = yield CapacitorGoogleMaps.addListener('onBoundsChanged', _this24.generateCallback(callback));\n      } else {\n        _this24.onBoundsChangedListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onCameraMoveStarted' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnCameraMoveStartedListener(callback) {\n    var _this25 = this;\n    return _asyncToGenerator(function* () {\n      if (_this25.onCameraMoveStartedListener) {\n        _this25.onCameraMoveStartedListener.remove();\n      }\n      if (callback) {\n        _this25.onCameraMoveStartedListener = yield CapacitorGoogleMaps.addListener('onCameraMoveStarted', _this25.generateCallback(callback));\n      } else {\n        _this25.onCameraMoveStartedListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onClusterClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnClusterClickListener(callback) {\n    var _this26 = this;\n    return _asyncToGenerator(function* () {\n      if (_this26.onClusterClickListener) {\n        _this26.onClusterClickListener.remove();\n      }\n      if (callback) {\n        _this26.onClusterClickListener = yield CapacitorGoogleMaps.addListener('onClusterClick', _this26.generateCallback(callback));\n      } else {\n        _this26.onClusterClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onClusterInfoWindowClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnClusterInfoWindowClickListener(callback) {\n    var _this27 = this;\n    return _asyncToGenerator(function* () {\n      if (_this27.onClusterInfoWindowClickListener) {\n        _this27.onClusterInfoWindowClickListener.remove();\n      }\n      if (callback) {\n        _this27.onClusterInfoWindowClickListener = yield CapacitorGoogleMaps.addListener('onClusterInfoWindowClick', _this27.generateCallback(callback));\n      } else {\n        _this27.onClusterInfoWindowClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onInfoWindowClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnInfoWindowClickListener(callback) {\n    var _this28 = this;\n    return _asyncToGenerator(function* () {\n      if (_this28.onInfoWindowClickListener) {\n        _this28.onInfoWindowClickListener.remove();\n      }\n      if (callback) {\n        _this28.onInfoWindowClickListener = yield CapacitorGoogleMaps.addListener('onInfoWindowClick', _this28.generateCallback(callback));\n      } else {\n        _this28.onInfoWindowClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMapClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnMapClickListener(callback) {\n    var _this29 = this;\n    return _asyncToGenerator(function* () {\n      if (_this29.onMapClickListener) {\n        _this29.onMapClickListener.remove();\n      }\n      if (callback) {\n        _this29.onMapClickListener = yield CapacitorGoogleMaps.addListener('onMapClick', _this29.generateCallback(callback));\n      } else {\n        _this29.onMapClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onPolygonClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnPolygonClickListener(callback) {\n    var _this30 = this;\n    return _asyncToGenerator(function* () {\n      if (_this30.onPolygonClickListener) {\n        _this30.onPolygonClickListener.remove();\n      }\n      if (callback) {\n        _this30.onPolygonClickListener = yield CapacitorGoogleMaps.addListener('onPolygonClick', _this30.generateCallback(callback));\n      } else {\n        _this30.onPolygonClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onCircleClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnCircleClickListener(callback) {\n    var _this31 = this;\n    return _asyncToGenerator(function* () {\n      if (_this31.onCircleClickListener) [_this31.onCircleClickListener.remove()];\n      if (callback) {\n        _this31.onCircleClickListener = yield CapacitorGoogleMaps.addListener('onCircleClick', _this31.generateCallback(callback));\n      } else {\n        _this31.onCircleClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMarkerClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnMarkerClickListener(callback) {\n    var _this32 = this;\n    return _asyncToGenerator(function* () {\n      if (_this32.onMarkerClickListener) {\n        _this32.onMarkerClickListener.remove();\n      }\n      if (callback) {\n        _this32.onMarkerClickListener = yield CapacitorGoogleMaps.addListener('onMarkerClick', _this32.generateCallback(callback));\n      } else {\n        _this32.onMarkerClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onPolylineClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnPolylineClickListener(callback) {\n    var _this33 = this;\n    return _asyncToGenerator(function* () {\n      if (_this33.onPolylineClickListener) {\n        _this33.onPolylineClickListener.remove();\n      }\n      if (callback) {\n        _this33.onPolylineClickListener = yield CapacitorGoogleMaps.addListener('onPolylineClick', _this33.generateCallback(callback));\n      } else {\n        _this33.onPolylineClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMarkerDragStart' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnMarkerDragStartListener(callback) {\n    var _this34 = this;\n    return _asyncToGenerator(function* () {\n      if (_this34.onMarkerDragStartListener) {\n        _this34.onMarkerDragStartListener.remove();\n      }\n      if (callback) {\n        _this34.onMarkerDragStartListener = yield CapacitorGoogleMaps.addListener('onMarkerDragStart', _this34.generateCallback(callback));\n      } else {\n        _this34.onMarkerDragStartListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMarkerDrag' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnMarkerDragListener(callback) {\n    var _this35 = this;\n    return _asyncToGenerator(function* () {\n      if (_this35.onMarkerDragListener) {\n        _this35.onMarkerDragListener.remove();\n      }\n      if (callback) {\n        _this35.onMarkerDragListener = yield CapacitorGoogleMaps.addListener('onMarkerDrag', _this35.generateCallback(callback));\n      } else {\n        _this35.onMarkerDragListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMarkerDragEnd' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnMarkerDragEndListener(callback) {\n    var _this36 = this;\n    return _asyncToGenerator(function* () {\n      if (_this36.onMarkerDragEndListener) {\n        _this36.onMarkerDragEndListener.remove();\n      }\n      if (callback) {\n        _this36.onMarkerDragEndListener = yield CapacitorGoogleMaps.addListener('onMarkerDragEnd', _this36.generateCallback(callback));\n      } else {\n        _this36.onMarkerDragEndListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMyLocationButtonClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnMyLocationButtonClickListener(callback) {\n    var _this37 = this;\n    return _asyncToGenerator(function* () {\n      if (_this37.onMyLocationButtonClickListener) {\n        _this37.onMyLocationButtonClickListener.remove();\n      }\n      if (callback) {\n        _this37.onMyLocationButtonClickListener = yield CapacitorGoogleMaps.addListener('onMyLocationButtonClick', _this37.generateCallback(callback));\n      } else {\n        _this37.onMyLocationButtonClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMyLocationClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n  setOnMyLocationClickListener(callback) {\n    var _this38 = this;\n    return _asyncToGenerator(function* () {\n      if (_this38.onMyLocationClickListener) {\n        _this38.onMyLocationClickListener.remove();\n      }\n      if (callback) {\n        _this38.onMyLocationClickListener = yield CapacitorGoogleMaps.addListener('onMyLocationClick', _this38.generateCallback(callback));\n      } else {\n        _this38.onMyLocationClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Remove all event listeners on the map.\n   *\n   * @param callback\n   * @returns\n   */\n  removeAllMapListeners() {\n    var _this39 = this;\n    return _asyncToGenerator(function* () {\n      if (_this39.onBoundsChangedListener) {\n        _this39.onBoundsChangedListener.remove();\n        _this39.onBoundsChangedListener = undefined;\n      }\n      if (_this39.onCameraIdleListener) {\n        _this39.onCameraIdleListener.remove();\n        _this39.onCameraIdleListener = undefined;\n      }\n      if (_this39.onCameraMoveStartedListener) {\n        _this39.onCameraMoveStartedListener.remove();\n        _this39.onCameraMoveStartedListener = undefined;\n      }\n      if (_this39.onClusterClickListener) {\n        _this39.onClusterClickListener.remove();\n        _this39.onClusterClickListener = undefined;\n      }\n      if (_this39.onClusterInfoWindowClickListener) {\n        _this39.onClusterInfoWindowClickListener.remove();\n        _this39.onClusterInfoWindowClickListener = undefined;\n      }\n      if (_this39.onInfoWindowClickListener) {\n        _this39.onInfoWindowClickListener.remove();\n        _this39.onInfoWindowClickListener = undefined;\n      }\n      if (_this39.onMapClickListener) {\n        _this39.onMapClickListener.remove();\n        _this39.onMapClickListener = undefined;\n      }\n      if (_this39.onMarkerClickListener) {\n        _this39.onMarkerClickListener.remove();\n        _this39.onMarkerClickListener = undefined;\n      }\n      if (_this39.onCircleClickListener) {\n        _this39.onCircleClickListener.remove();\n        _this39.onCircleClickListener = undefined;\n      }\n      if (_this39.onMyLocationButtonClickListener) {\n        _this39.onMyLocationButtonClickListener.remove();\n        _this39.onMyLocationButtonClickListener = undefined;\n      }\n      if (_this39.onMyLocationClickListener) {\n        _this39.onMyLocationClickListener.remove();\n        _this39.onMyLocationClickListener = undefined;\n      }\n    })();\n  }\n  generateCallback(callback) {\n    const mapId = this.id;\n    return data => {\n      if (data.mapId == mapId) {\n        callback(data);\n      }\n    };\n  }\n}","map":{"version":3,"names":["Capacitor","LatLngBounds","MapType","CapacitorGoogleMaps","MapCustomElement","HTMLElement","constructor","connectedCallback","getPlatform","style","overflow","overflowDiv","document","createElement","height","appendChild","customElements","define","GoogleMap","id","element","handleScrollEvent","updateMapBounds","create","options","callback","_asyncToGenerator","newMap","Error","config","androidLiteMode","undefined","dataset","internalId","elementBounds","getElementBounds","width","x","y","devicePixelRatio","window","initScrolling","isNativePlatform","onMapReadyListener","addListener","data","mapId","remove","Promise","resolve","getBoundingClientRect","retries","boundsInterval","setInterval","console","warn","clearInterval","enableClustering","minClusterSize","_this","disableClustering","_this2","addMarker","marker","_this3","res","addMarkers","markers","_this4","ids","removeMarker","_this5","markerId","removeMarkers","_this6","markerIds","addPolygons","polygons","_this7","addPolylines","polylines","_this8","removePolygons","_this9","polygonIds","addCircles","circles","_this10","removeCircles","_this11","circleIds","removePolylines","_this12","polylineIds","destroy","_this13","disableScrolling","removeAllMapListeners","setCamera","_this14","getMapType","_this15","type","setMapType","mapType","_this16","enableIndoorMaps","enabled","_this17","enableTrafficLayer","_this18","enableAccessibilityElements","_this19","enableCurrentLocation","_this20","setPadding","padding","_this21","getMapBounds","_this22","ionContents","getElementsByTagName","i","length","scrollEvents","addEventListener","screen","orientation","setTimeout","removeEventListener","mapRect","onScroll","mapBounds","setOnCameraIdleListener","_this23","onCameraIdleListener","generateCallback","setOnBoundsChangedListener","_this24","onBoundsChangedListener","setOnCameraMoveStartedListener","_this25","onCameraMoveStartedListener","setOnClusterClickListener","_this26","onClusterClickListener","setOnClusterInfoWindowClickListener","_this27","onClusterInfoWindowClickListener","setOnInfoWindowClickListener","_this28","onInfoWindowClickListener","setOnMapClickListener","_this29","onMapClickListener","setOnPolygonClickListener","_this30","onPolygonClickListener","setOnCircleClickListener","_this31","onCircleClickListener","setOnMarkerClickListener","_this32","onMarkerClickListener","setOnPolylineClickListener","_this33","onPolylineClickListener","setOnMarkerDragStartListener","_this34","onMarkerDragStartListener","setOnMarkerDragListener","_this35","onMarkerDragListener","setOnMarkerDragEndListener","_this36","onMarkerDragEndListener","setOnMyLocationButtonClickListener","_this37","onMyLocationButtonClickListener","setOnMyLocationClickListener","_this38","onMyLocationClickListener","_this39"],"sources":["/home/yimnai_dev/PROJECTS/fet/Internet_Mobile_Programming/digitekisi-mobile/node_modules/.pnpm/@capacitor+google-maps@5.1.2_@capacitor+core@5.0.5/node_modules/@capacitor/google-maps/dist/esm/map.js"],"sourcesContent":["import { Capacitor } from '@capacitor/core';\nimport { LatLngBounds, MapType } from './definitions';\nimport { CapacitorGoogleMaps } from './implementation';\nclass MapCustomElement extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        if (Capacitor.getPlatform() == 'ios') {\n            this.style.overflow = 'scroll';\n            this.style['-webkit-overflow-scrolling'] = 'touch';\n            const overflowDiv = document.createElement('div');\n            overflowDiv.style.height = '200%';\n            this.appendChild(overflowDiv);\n        }\n    }\n}\ncustomElements.define('capacitor-google-map', MapCustomElement);\nexport class GoogleMap {\n    constructor(id) {\n        this.element = null;\n        this.handleScrollEvent = () => this.updateMapBounds();\n        this.id = id;\n    }\n    /**\n     * Creates a new instance of a Google Map\n     * @param options\n     * @param callback\n     * @returns GoogleMap\n     */\n    static async create(options, callback) {\n        const newMap = new GoogleMap(options.id);\n        if (!options.element) {\n            throw new Error('container element is required');\n        }\n        if (options.config.androidLiteMode === undefined) {\n            options.config.androidLiteMode = false;\n        }\n        newMap.element = options.element;\n        newMap.element.dataset.internalId = options.id;\n        const elementBounds = await GoogleMap.getElementBounds(options.element);\n        options.config.width = elementBounds.width;\n        options.config.height = elementBounds.height;\n        options.config.x = elementBounds.x;\n        options.config.y = elementBounds.y;\n        options.config.devicePixelRatio = window.devicePixelRatio;\n        if (Capacitor.getPlatform() == 'android') {\n            newMap.initScrolling();\n        }\n        if (Capacitor.isNativePlatform()) {\n            options.element = {};\n        }\n        await CapacitorGoogleMaps.create(options);\n        if (callback) {\n            const onMapReadyListener = await CapacitorGoogleMaps.addListener('onMapReady', (data) => {\n                if (data.mapId == newMap.id) {\n                    callback(data);\n                    onMapReadyListener.remove();\n                }\n            });\n        }\n        return newMap;\n    }\n    static async getElementBounds(element) {\n        return new Promise(resolve => {\n            let elementBounds = element.getBoundingClientRect();\n            if (elementBounds.width == 0) {\n                let retries = 0;\n                const boundsInterval = setInterval(function () {\n                    if (elementBounds.width == 0 && retries < 30) {\n                        elementBounds = element.getBoundingClientRect();\n                        retries++;\n                    }\n                    else {\n                        if (retries == 30) {\n                            console.warn('Map size could not be determined');\n                        }\n                        clearInterval(boundsInterval);\n                        resolve(elementBounds);\n                    }\n                }, 100);\n            }\n            else {\n                resolve(elementBounds);\n            }\n        });\n    }\n    /**\n     * Enable marker clustering\n     *\n     * @param minClusterSize - The minimum number of markers that can be clustered together.\n     * @defaultValue 4\n     *\n     * @returns void\n     */\n    async enableClustering(minClusterSize) {\n        return CapacitorGoogleMaps.enableClustering({\n            id: this.id,\n            minClusterSize,\n        });\n    }\n    /**\n     * Disable marker clustering\n     *\n     * @returns void\n     */\n    async disableClustering() {\n        return CapacitorGoogleMaps.disableClustering({\n            id: this.id,\n        });\n    }\n    /**\n     * Adds a marker to the map\n     *\n     * @param marker\n     * @returns created marker id\n     */\n    async addMarker(marker) {\n        const res = await CapacitorGoogleMaps.addMarker({\n            id: this.id,\n            marker,\n        });\n        return res.id;\n    }\n    /**\n     * Adds multiple markers to the map\n     *\n     * @param markers\n     * @returns array of created marker IDs\n     */\n    async addMarkers(markers) {\n        const res = await CapacitorGoogleMaps.addMarkers({\n            id: this.id,\n            markers,\n        });\n        return res.ids;\n    }\n    /**\n     * Remove marker from the map\n     *\n     * @param id id of the marker to remove from the map\n     * @returns\n     */\n    async removeMarker(id) {\n        return CapacitorGoogleMaps.removeMarker({\n            id: this.id,\n            markerId: id,\n        });\n    }\n    /**\n     * Remove markers from the map\n     *\n     * @param ids array of ids to remove from the map\n     * @returns\n     */\n    async removeMarkers(ids) {\n        return CapacitorGoogleMaps.removeMarkers({\n            id: this.id,\n            markerIds: ids,\n        });\n    }\n    async addPolygons(polygons) {\n        const res = await CapacitorGoogleMaps.addPolygons({\n            id: this.id,\n            polygons,\n        });\n        return res.ids;\n    }\n    async addPolylines(polylines) {\n        const res = await CapacitorGoogleMaps.addPolylines({\n            id: this.id,\n            polylines,\n        });\n        return res.ids;\n    }\n    async removePolygons(ids) {\n        return CapacitorGoogleMaps.removePolygons({\n            id: this.id,\n            polygonIds: ids,\n        });\n    }\n    async addCircles(circles) {\n        const res = await CapacitorGoogleMaps.addCircles({\n            id: this.id,\n            circles,\n        });\n        return res.ids;\n    }\n    async removeCircles(ids) {\n        return CapacitorGoogleMaps.removeCircles({\n            id: this.id,\n            circleIds: ids,\n        });\n    }\n    async removePolylines(ids) {\n        return CapacitorGoogleMaps.removePolylines({\n            id: this.id,\n            polylineIds: ids,\n        });\n    }\n    /**\n     * Destroy the current instance of the map\n     */\n    async destroy() {\n        if (Capacitor.getPlatform() == 'android') {\n            this.disableScrolling();\n        }\n        this.removeAllMapListeners();\n        return CapacitorGoogleMaps.destroy({\n            id: this.id,\n        });\n    }\n    /**\n     * Update the map camera configuration\n     *\n     * @param config\n     * @returns\n     */\n    async setCamera(config) {\n        return CapacitorGoogleMaps.setCamera({\n            id: this.id,\n            config,\n        });\n    }\n    async getMapType() {\n        const { type } = await CapacitorGoogleMaps.getMapType({ id: this.id });\n        return MapType[type];\n    }\n    /**\n     * Sets the type of map tiles that should be displayed.\n     *\n     * @param mapType\n     * @returns\n     */\n    async setMapType(mapType) {\n        return CapacitorGoogleMaps.setMapType({\n            id: this.id,\n            mapType,\n        });\n    }\n    /**\n     * Sets whether indoor maps are shown, where available.\n     *\n     * @param enabled\n     * @returns\n     */\n    async enableIndoorMaps(enabled) {\n        return CapacitorGoogleMaps.enableIndoorMaps({\n            id: this.id,\n            enabled,\n        });\n    }\n    /**\n     * Controls whether the map is drawing traffic data, if available.\n     *\n     * @param enabled\n     * @returns\n     */\n    async enableTrafficLayer(enabled) {\n        return CapacitorGoogleMaps.enableTrafficLayer({\n            id: this.id,\n            enabled,\n        });\n    }\n    /**\n     * Show accessibility elements for overlay objects, such as Marker and Polyline.\n     *\n     * Only available on iOS.\n     *\n     * @param enabled\n     * @returns\n     */\n    async enableAccessibilityElements(enabled) {\n        return CapacitorGoogleMaps.enableAccessibilityElements({\n            id: this.id,\n            enabled,\n        });\n    }\n    /**\n     * Set whether the My Location dot and accuracy circle is enabled.\n     *\n     * @param enabled\n     * @returns\n     */\n    async enableCurrentLocation(enabled) {\n        return CapacitorGoogleMaps.enableCurrentLocation({\n            id: this.id,\n            enabled,\n        });\n    }\n    /**\n     * Set padding on the 'visible' region of the view.\n     *\n     * @param padding\n     * @returns\n     */\n    async setPadding(padding) {\n        return CapacitorGoogleMaps.setPadding({\n            id: this.id,\n            padding,\n        });\n    }\n    /**\n     * Get the map's current viewport latitude and longitude bounds.\n     *\n     * @returns {LatLngBounds}\n     */\n    async getMapBounds() {\n        return new LatLngBounds(await CapacitorGoogleMaps.getMapBounds({\n            id: this.id,\n        }));\n    }\n    initScrolling() {\n        const ionContents = document.getElementsByTagName('ion-content');\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < ionContents.length; i++) {\n            ionContents[i].scrollEvents = true;\n        }\n        window.addEventListener('ionScroll', this.handleScrollEvent);\n        window.addEventListener('scroll', this.handleScrollEvent);\n        window.addEventListener('resize', this.handleScrollEvent);\n        if (screen.orientation) {\n            screen.orientation.addEventListener('change', () => {\n                setTimeout(this.updateMapBounds, 500);\n            });\n        }\n        else {\n            window.addEventListener('orientationchange', () => {\n                setTimeout(this.updateMapBounds, 500);\n            });\n        }\n    }\n    disableScrolling() {\n        window.removeEventListener('ionScroll', this.handleScrollEvent);\n        window.removeEventListener('scroll', this.handleScrollEvent);\n        window.removeEventListener('resize', this.handleScrollEvent);\n        if (screen.orientation) {\n            screen.orientation.removeEventListener('change', () => {\n                setTimeout(this.updateMapBounds, 1000);\n            });\n        }\n        else {\n            window.removeEventListener('orientationchange', () => {\n                setTimeout(this.updateMapBounds, 1000);\n            });\n        }\n    }\n    updateMapBounds() {\n        if (this.element) {\n            const mapRect = this.element.getBoundingClientRect();\n            CapacitorGoogleMaps.onScroll({\n                id: this.id,\n                mapBounds: {\n                    x: mapRect.x,\n                    y: mapRect.y,\n                    width: mapRect.width,\n                    height: mapRect.height,\n                },\n            });\n        }\n    }\n    /*\n    private findContainerElement(): HTMLElement | null {\n      if (!this.element) {\n        return null;\n      }\n  \n      let parentElement = this.element.parentElement;\n      while (parentElement !== null) {\n        if (window.getComputedStyle(parentElement).overflowY !== 'hidden') {\n          return parentElement;\n        }\n  \n        parentElement = parentElement.parentElement;\n      }\n  \n      return null;\n    }\n    */\n    /**\n     * Set the event listener on the map for 'onCameraIdle' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnCameraIdleListener(callback) {\n        if (this.onCameraIdleListener) {\n            this.onCameraIdleListener.remove();\n        }\n        if (callback) {\n            this.onCameraIdleListener = await CapacitorGoogleMaps.addListener('onCameraIdle', this.generateCallback(callback));\n        }\n        else {\n            this.onCameraIdleListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onBoundsChanged' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnBoundsChangedListener(callback) {\n        if (this.onBoundsChangedListener) {\n            this.onBoundsChangedListener.remove();\n        }\n        if (callback) {\n            this.onBoundsChangedListener = await CapacitorGoogleMaps.addListener('onBoundsChanged', this.generateCallback(callback));\n        }\n        else {\n            this.onBoundsChangedListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onCameraMoveStarted' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnCameraMoveStartedListener(callback) {\n        if (this.onCameraMoveStartedListener) {\n            this.onCameraMoveStartedListener.remove();\n        }\n        if (callback) {\n            this.onCameraMoveStartedListener = await CapacitorGoogleMaps.addListener('onCameraMoveStarted', this.generateCallback(callback));\n        }\n        else {\n            this.onCameraMoveStartedListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onClusterClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnClusterClickListener(callback) {\n        if (this.onClusterClickListener) {\n            this.onClusterClickListener.remove();\n        }\n        if (callback) {\n            this.onClusterClickListener = await CapacitorGoogleMaps.addListener('onClusterClick', this.generateCallback(callback));\n        }\n        else {\n            this.onClusterClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onClusterInfoWindowClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnClusterInfoWindowClickListener(callback) {\n        if (this.onClusterInfoWindowClickListener) {\n            this.onClusterInfoWindowClickListener.remove();\n        }\n        if (callback) {\n            this.onClusterInfoWindowClickListener =\n                await CapacitorGoogleMaps.addListener('onClusterInfoWindowClick', this.generateCallback(callback));\n        }\n        else {\n            this.onClusterInfoWindowClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onInfoWindowClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnInfoWindowClickListener(callback) {\n        if (this.onInfoWindowClickListener) {\n            this.onInfoWindowClickListener.remove();\n        }\n        if (callback) {\n            this.onInfoWindowClickListener = await CapacitorGoogleMaps.addListener('onInfoWindowClick', this.generateCallback(callback));\n        }\n        else {\n            this.onInfoWindowClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMapClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMapClickListener(callback) {\n        if (this.onMapClickListener) {\n            this.onMapClickListener.remove();\n        }\n        if (callback) {\n            this.onMapClickListener = await CapacitorGoogleMaps.addListener('onMapClick', this.generateCallback(callback));\n        }\n        else {\n            this.onMapClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onPolygonClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnPolygonClickListener(callback) {\n        if (this.onPolygonClickListener) {\n            this.onPolygonClickListener.remove();\n        }\n        if (callback) {\n            this.onPolygonClickListener = await CapacitorGoogleMaps.addListener('onPolygonClick', this.generateCallback(callback));\n        }\n        else {\n            this.onPolygonClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onCircleClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnCircleClickListener(callback) {\n        if (this.onCircleClickListener)\n            [this.onCircleClickListener.remove()];\n        if (callback) {\n            this.onCircleClickListener = await CapacitorGoogleMaps.addListener('onCircleClick', this.generateCallback(callback));\n        }\n        else {\n            this.onCircleClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMarkerClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMarkerClickListener(callback) {\n        if (this.onMarkerClickListener) {\n            this.onMarkerClickListener.remove();\n        }\n        if (callback) {\n            this.onMarkerClickListener = await CapacitorGoogleMaps.addListener('onMarkerClick', this.generateCallback(callback));\n        }\n        else {\n            this.onMarkerClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onPolylineClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnPolylineClickListener(callback) {\n        if (this.onPolylineClickListener) {\n            this.onPolylineClickListener.remove();\n        }\n        if (callback) {\n            this.onPolylineClickListener = await CapacitorGoogleMaps.addListener('onPolylineClick', this.generateCallback(callback));\n        }\n        else {\n            this.onPolylineClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMarkerDragStart' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMarkerDragStartListener(callback) {\n        if (this.onMarkerDragStartListener) {\n            this.onMarkerDragStartListener.remove();\n        }\n        if (callback) {\n            this.onMarkerDragStartListener = await CapacitorGoogleMaps.addListener('onMarkerDragStart', this.generateCallback(callback));\n        }\n        else {\n            this.onMarkerDragStartListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMarkerDrag' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMarkerDragListener(callback) {\n        if (this.onMarkerDragListener) {\n            this.onMarkerDragListener.remove();\n        }\n        if (callback) {\n            this.onMarkerDragListener = await CapacitorGoogleMaps.addListener('onMarkerDrag', this.generateCallback(callback));\n        }\n        else {\n            this.onMarkerDragListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMarkerDragEnd' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMarkerDragEndListener(callback) {\n        if (this.onMarkerDragEndListener) {\n            this.onMarkerDragEndListener.remove();\n        }\n        if (callback) {\n            this.onMarkerDragEndListener = await CapacitorGoogleMaps.addListener('onMarkerDragEnd', this.generateCallback(callback));\n        }\n        else {\n            this.onMarkerDragEndListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMyLocationButtonClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMyLocationButtonClickListener(callback) {\n        if (this.onMyLocationButtonClickListener) {\n            this.onMyLocationButtonClickListener.remove();\n        }\n        if (callback) {\n            this.onMyLocationButtonClickListener =\n                await CapacitorGoogleMaps.addListener('onMyLocationButtonClick', this.generateCallback(callback));\n        }\n        else {\n            this.onMyLocationButtonClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMyLocationClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMyLocationClickListener(callback) {\n        if (this.onMyLocationClickListener) {\n            this.onMyLocationClickListener.remove();\n        }\n        if (callback) {\n            this.onMyLocationClickListener = await CapacitorGoogleMaps.addListener('onMyLocationClick', this.generateCallback(callback));\n        }\n        else {\n            this.onMyLocationClickListener = undefined;\n        }\n    }\n    /**\n     * Remove all event listeners on the map.\n     *\n     * @param callback\n     * @returns\n     */\n    async removeAllMapListeners() {\n        if (this.onBoundsChangedListener) {\n            this.onBoundsChangedListener.remove();\n            this.onBoundsChangedListener = undefined;\n        }\n        if (this.onCameraIdleListener) {\n            this.onCameraIdleListener.remove();\n            this.onCameraIdleListener = undefined;\n        }\n        if (this.onCameraMoveStartedListener) {\n            this.onCameraMoveStartedListener.remove();\n            this.onCameraMoveStartedListener = undefined;\n        }\n        if (this.onClusterClickListener) {\n            this.onClusterClickListener.remove();\n            this.onClusterClickListener = undefined;\n        }\n        if (this.onClusterInfoWindowClickListener) {\n            this.onClusterInfoWindowClickListener.remove();\n            this.onClusterInfoWindowClickListener = undefined;\n        }\n        if (this.onInfoWindowClickListener) {\n            this.onInfoWindowClickListener.remove();\n            this.onInfoWindowClickListener = undefined;\n        }\n        if (this.onMapClickListener) {\n            this.onMapClickListener.remove();\n            this.onMapClickListener = undefined;\n        }\n        if (this.onMarkerClickListener) {\n            this.onMarkerClickListener.remove();\n            this.onMarkerClickListener = undefined;\n        }\n        if (this.onCircleClickListener) {\n            this.onCircleClickListener.remove();\n            this.onCircleClickListener = undefined;\n        }\n        if (this.onMyLocationButtonClickListener) {\n            this.onMyLocationButtonClickListener.remove();\n            this.onMyLocationButtonClickListener = undefined;\n        }\n        if (this.onMyLocationClickListener) {\n            this.onMyLocationClickListener.remove();\n            this.onMyLocationClickListener = undefined;\n        }\n    }\n    generateCallback(callback) {\n        const mapId = this.id;\n        return (data) => {\n            if (data.mapId == mapId) {\n                callback(data);\n            }\n        };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}