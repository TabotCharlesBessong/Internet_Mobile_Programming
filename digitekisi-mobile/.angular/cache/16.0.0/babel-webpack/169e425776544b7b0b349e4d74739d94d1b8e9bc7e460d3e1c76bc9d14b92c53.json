{"ast":null,"code":"import _asyncToGenerator from \"/home/yimnai_dev/PROJECTS/fet/Internet_Mobile_Programming/digitekisi-mobile/node_modules/.pnpm/@babel+runtime@7.21.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { WebPlugin } from '@capacitor/core';\nimport { MarkerClusterer, SuperClusterAlgorithm } from '@googlemaps/markerclusterer';\nimport { MapType, LatLngBounds } from './definitions';\nexport class CapacitorGoogleMapsWeb extends WebPlugin {\n  constructor() {\n    super(...arguments);\n    this.gMapsRef = undefined;\n    this.maps = {};\n    this.currMarkerId = 0;\n    this.currPolygonId = 0;\n    this.currCircleId = 0;\n    this.currPolylineId = 0;\n    this.onClusterClickHandler = (_, cluster, map) => {\n      var _a, _b;\n      const mapId = this.getIdFromMap(map);\n      const items = [];\n      if (cluster.markers != undefined) {\n        for (const marker of cluster.markers) {\n          const markerId = this.getIdFromMarker(mapId, marker);\n          items.push({\n            markerId: markerId,\n            latitude: (_a = marker.getPosition()) === null || _a === void 0 ? void 0 : _a.lat(),\n            longitude: (_b = marker.getPosition()) === null || _b === void 0 ? void 0 : _b.lng(),\n            title: marker.getTitle(),\n            snippet: ''\n          });\n        }\n      }\n      this.notifyListeners('onClusterClick', {\n        mapId: mapId,\n        latitude: cluster.position.lat(),\n        longitude: cluster.position.lng(),\n        size: cluster.count,\n        items: items\n      });\n    };\n  }\n  getIdFromMap(map) {\n    for (const id in this.maps) {\n      if (this.maps[id].map == map) {\n        return id;\n      }\n    }\n    return '';\n  }\n  getIdFromMarker(mapId, marker) {\n    for (const id in this.maps[mapId].markers) {\n      if (this.maps[mapId].markers[id] == marker) {\n        return id;\n      }\n    }\n    return '';\n  }\n  importGoogleLib(apiKey, region, language) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.gMapsRef === undefined) {\n        const lib = yield import('@googlemaps/js-api-loader');\n        const loader = new lib.Loader({\n          apiKey: apiKey !== null && apiKey !== void 0 ? apiKey : '',\n          version: 'weekly',\n          libraries: ['places'],\n          language,\n          region\n        });\n        const google = yield loader.load();\n        _this.gMapsRef = google.maps;\n        console.log('Loaded google maps API');\n      }\n    })();\n  }\n  setCamera(_args) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      // Animation not supported yet...\n      _this2.maps[_args.id].map.moveCamera({\n        center: _args.config.coordinate,\n        heading: _args.config.bearing,\n        tilt: _args.config.angle,\n        zoom: _args.config.zoom\n      });\n    })();\n  }\n  getMapType(_args) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      let type = _this3.maps[_args.id].map.getMapTypeId();\n      if (type !== undefined) {\n        if (type === 'roadmap') {\n          type = MapType.Normal;\n        }\n        return {\n          type\n        };\n      }\n      throw new Error('Map type is undefined');\n    })();\n  }\n  setMapType(_args) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      let mapType = _args.mapType.toLowerCase();\n      if (mapType === MapType.Normal) {\n        mapType = 'roadmap';\n      }\n      _this4.maps[_args.id].map.setMapTypeId(mapType);\n    })();\n  }\n  enableIndoorMaps(_args) {\n    return _asyncToGenerator(function* () {\n      throw new Error('Method not supported on web.');\n    })();\n  }\n  enableTrafficLayer(_args) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      var _a;\n      const trafficLayer = (_a = _this5.maps[_args.id].trafficLayer) !== null && _a !== void 0 ? _a : new google.maps.TrafficLayer();\n      if (_args.enabled) {\n        trafficLayer.setMap(_this5.maps[_args.id].map);\n        _this5.maps[_args.id].trafficLayer = trafficLayer;\n      } else if (_this5.maps[_args.id].trafficLayer) {\n        trafficLayer.setMap(null);\n        _this5.maps[_args.id].trafficLayer = undefined;\n      }\n    })();\n  }\n  enableAccessibilityElements(_args) {\n    return _asyncToGenerator(function* () {\n      throw new Error('Method not supported on web.');\n    })();\n  }\n  dispatchMapEvent(_args) {\n    throw new Error('Method not supported on web.');\n  }\n  enableCurrentLocation(_args) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      if (_args.enabled) {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(position => {\n            const pos = {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            };\n            _this6.maps[_args.id].map.setCenter(pos);\n            _this6.notifyListeners('onMyLocationButtonClick', {});\n            _this6.notifyListeners('onMyLocationClick', {});\n          }, () => {\n            throw new Error('Geolocation not supported on web browser.');\n          });\n        } else {\n          throw new Error('Geolocation not supported on web browser.');\n        }\n      }\n    })();\n  }\n  setPadding(_args) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      const bounds = _this7.maps[_args.id].map.getBounds();\n      if (bounds !== undefined) {\n        _this7.maps[_args.id].map.fitBounds(bounds, _args.padding);\n      }\n    })();\n  }\n  getMapBounds(_args) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      const bounds = _this8.maps[_args.id].map.getBounds();\n      if (!bounds) {\n        throw new Error('Google Map Bounds could not be found.');\n      }\n      return new LatLngBounds({\n        southwest: {\n          lat: bounds.getSouthWest().lat(),\n          lng: bounds.getSouthWest().lng()\n        },\n        center: {\n          lat: bounds.getCenter().lat(),\n          lng: bounds.getCenter().lng()\n        },\n        northeast: {\n          lat: bounds.getNorthEast().lat(),\n          lng: bounds.getNorthEast().lng()\n        }\n      });\n    })();\n  }\n  addMarkers(_args) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      const markerIds = [];\n      const map = _this9.maps[_args.id];\n      for (const markerArgs of _args.markers) {\n        const markerOpts = _this9.buildMarkerOpts(markerArgs, map.map);\n        const marker = new google.maps.Marker(markerOpts);\n        const id = '' + _this9.currMarkerId;\n        map.markers[id] = marker;\n        _this9.setMarkerListeners(_args.id, id, marker);\n        markerIds.push(id);\n        _this9.currMarkerId++;\n      }\n      return {\n        ids: markerIds\n      };\n    })();\n  }\n  addMarker(_args) {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      const markerOpts = _this10.buildMarkerOpts(_args.marker, _this10.maps[_args.id].map);\n      const marker = new google.maps.Marker(markerOpts);\n      const id = '' + _this10.currMarkerId;\n      _this10.maps[_args.id].markers[id] = marker;\n      _this10.setMarkerListeners(_args.id, id, marker);\n      _this10.currMarkerId++;\n      return {\n        id: id\n      };\n    })();\n  }\n  removeMarkers(_args) {\n    var _this11 = this;\n    return _asyncToGenerator(function* () {\n      const map = _this11.maps[_args.id];\n      for (const id of _args.markerIds) {\n        map.markers[id].setMap(null);\n        delete map.markers[id];\n      }\n    })();\n  }\n  removeMarker(_args) {\n    var _this12 = this;\n    return _asyncToGenerator(function* () {\n      _this12.maps[_args.id].markers[_args.markerId].setMap(null);\n      delete _this12.maps[_args.id].markers[_args.markerId];\n    })();\n  }\n  addPolygons(args) {\n    var _this13 = this;\n    return _asyncToGenerator(function* () {\n      const polygonIds = [];\n      const map = _this13.maps[args.id];\n      for (const polygonArgs of args.polygons) {\n        const polygon = new google.maps.Polygon(polygonArgs);\n        polygon.setMap(map.map);\n        const id = '' + _this13.currPolygonId;\n        _this13.maps[args.id].polygons[id] = polygon;\n        _this13.setPolygonListeners(args.id, id, polygon);\n        polygonIds.push(id);\n        _this13.currPolygonId++;\n      }\n      return {\n        ids: polygonIds\n      };\n    })();\n  }\n  removePolygons(args) {\n    var _this14 = this;\n    return _asyncToGenerator(function* () {\n      const map = _this14.maps[args.id];\n      for (const id of args.polygonIds) {\n        map.polygons[id].setMap(null);\n        delete map.polygons[id];\n      }\n    })();\n  }\n  addCircles(args) {\n    var _this15 = this;\n    return _asyncToGenerator(function* () {\n      const circleIds = [];\n      const map = _this15.maps[args.id];\n      for (const circleArgs of args.circles) {\n        const circle = new google.maps.Circle(circleArgs);\n        circle.setMap(map.map);\n        const id = '' + _this15.currCircleId;\n        _this15.maps[args.id].circles[id] = circle;\n        _this15.setCircleListeners(args.id, id, circle);\n        circleIds.push(id);\n        _this15.currCircleId++;\n      }\n      return {\n        ids: circleIds\n      };\n    })();\n  }\n  removeCircles(args) {\n    var _this16 = this;\n    return _asyncToGenerator(function* () {\n      const map = _this16.maps[args.id];\n      for (const id of args.circleIds) {\n        map.circles[id].setMap(null);\n        delete map.circles[id];\n      }\n    })();\n  }\n  addPolylines(args) {\n    var _this17 = this;\n    return _asyncToGenerator(function* () {\n      const lineIds = [];\n      const map = _this17.maps[args.id];\n      for (const polylineArgs of args.polylines) {\n        const polyline = new google.maps.Polyline(polylineArgs);\n        polyline.set('tag', polylineArgs.tag);\n        polyline.setMap(map.map);\n        const id = '' + _this17.currPolylineId;\n        _this17.maps[args.id].polylines[id] = polyline;\n        _this17.setPolylineListeners(args.id, id, polyline);\n        lineIds.push(id);\n        _this17.currPolylineId++;\n      }\n      return {\n        ids: lineIds\n      };\n    })();\n  }\n  removePolylines(args) {\n    var _this18 = this;\n    return _asyncToGenerator(function* () {\n      const map = _this18.maps[args.id];\n      for (const id of args.polylineIds) {\n        map.polylines[id].setMap(null);\n        delete map.polylines[id];\n      }\n    })();\n  }\n  enableClustering(_args) {\n    var _this19 = this;\n    return _asyncToGenerator(function* () {\n      var _a;\n      const markers = [];\n      for (const id in _this19.maps[_args.id].markers) {\n        markers.push(_this19.maps[_args.id].markers[id]);\n      }\n      _this19.maps[_args.id].markerClusterer = new MarkerClusterer({\n        map: _this19.maps[_args.id].map,\n        markers: markers,\n        algorithm: new SuperClusterAlgorithm({\n          minPoints: (_a = _args.minClusterSize) !== null && _a !== void 0 ? _a : 4\n        }),\n        onClusterClick: _this19.onClusterClickHandler\n      });\n    })();\n  }\n  disableClustering(_args) {\n    var _this20 = this;\n    return _asyncToGenerator(function* () {\n      var _a;\n      (_a = _this20.maps[_args.id].markerClusterer) === null || _a === void 0 ? void 0 : _a.setMap(null);\n      _this20.maps[_args.id].markerClusterer = undefined;\n    })();\n  }\n  onScroll(_args) {\n    return _asyncToGenerator(function* () {\n      throw new Error('Method not supported on web.');\n    })();\n  }\n  create(_args) {\n    var _this21 = this;\n    return _asyncToGenerator(function* () {\n      console.log(`Create map: ${_args.id}`);\n      yield _this21.importGoogleLib(_args.apiKey, _args.region, _args.language);\n      _this21.maps[_args.id] = {\n        map: new window.google.maps.Map(_args.element, Object.assign({}, _args.config)),\n        element: _args.element,\n        markers: {},\n        polygons: {},\n        circles: {},\n        polylines: {}\n      };\n      _this21.setMapListeners(_args.id);\n    })();\n  }\n  destroy(_args) {\n    var _this22 = this;\n    return _asyncToGenerator(function* () {\n      console.log(`Destroy map: ${_args.id}`);\n      const mapItem = _this22.maps[_args.id];\n      mapItem.element.innerHTML = '';\n      mapItem.map.unbindAll();\n      delete _this22.maps[_args.id];\n    })();\n  }\n  mapBoundsContains(_args) {\n    var _this23 = this;\n    return _asyncToGenerator(function* () {\n      const bounds = _this23.getLatLngBounds(_args.bounds);\n      const point = new google.maps.LatLng(_args.point.lat, _args.point.lng);\n      return {\n        contains: bounds.contains(point)\n      };\n    })();\n  }\n  mapBoundsExtend(_args) {\n    var _this24 = this;\n    return _asyncToGenerator(function* () {\n      const bounds = _this24.getLatLngBounds(_args.bounds);\n      const point = new google.maps.LatLng(_args.point.lat, _args.point.lng);\n      bounds.extend(point);\n      const result = new LatLngBounds({\n        southwest: {\n          lat: bounds.getSouthWest().lat(),\n          lng: bounds.getSouthWest().lng()\n        },\n        center: {\n          lat: bounds.getCenter().lat(),\n          lng: bounds.getCenter().lng()\n        },\n        northeast: {\n          lat: bounds.getNorthEast().lat(),\n          lng: bounds.getNorthEast().lng()\n        }\n      });\n      return {\n        bounds: result\n      };\n    })();\n  }\n  getLatLngBounds(_args) {\n    return new google.maps.LatLngBounds(new google.maps.LatLng(_args.southwest.lat, _args.southwest.lng), new google.maps.LatLng(_args.northeast.lat, _args.northeast.lng));\n  }\n  setCircleListeners(mapId, circleId, circle) {\n    var _this25 = this;\n    return _asyncToGenerator(function* () {\n      circle.addListener('click', () => {\n        _this25.notifyListeners('onCircleClick', {\n          mapId: mapId,\n          circleId: circleId,\n          tag: circle.get('tag')\n        });\n      });\n    })();\n  }\n  setPolygonListeners(mapId, polygonId, polygon) {\n    var _this26 = this;\n    return _asyncToGenerator(function* () {\n      polygon.addListener('click', () => {\n        _this26.notifyListeners('onPolygonClick', {\n          mapId: mapId,\n          polygonId: polygonId,\n          tag: polygon.get('tag')\n        });\n      });\n    })();\n  }\n  setPolylineListeners(mapId, polylineId, polyline) {\n    var _this27 = this;\n    return _asyncToGenerator(function* () {\n      polyline.addListener('click', () => {\n        _this27.notifyListeners('onPolylineClick', {\n          mapId: mapId,\n          polylineId: polylineId,\n          tag: polyline.get('tag')\n        });\n      });\n    })();\n  }\n  setMarkerListeners(mapId, markerId, marker) {\n    var _this28 = this;\n    return _asyncToGenerator(function* () {\n      marker.addListener('click', () => {\n        var _a, _b;\n        _this28.notifyListeners('onMarkerClick', {\n          mapId: mapId,\n          markerId: markerId,\n          latitude: (_a = marker.getPosition()) === null || _a === void 0 ? void 0 : _a.lat(),\n          longitude: (_b = marker.getPosition()) === null || _b === void 0 ? void 0 : _b.lng(),\n          title: marker.getTitle(),\n          snippet: ''\n        });\n      });\n      marker.addListener('dragstart', () => {\n        var _a, _b;\n        _this28.notifyListeners('onMarkerDragStart', {\n          mapId: mapId,\n          markerId: markerId,\n          latitude: (_a = marker.getPosition()) === null || _a === void 0 ? void 0 : _a.lat(),\n          longitude: (_b = marker.getPosition()) === null || _b === void 0 ? void 0 : _b.lng(),\n          title: marker.getTitle(),\n          snippet: ''\n        });\n      });\n      marker.addListener('drag', () => {\n        var _a, _b;\n        _this28.notifyListeners('onMarkerDrag', {\n          mapId: mapId,\n          markerId: markerId,\n          latitude: (_a = marker.getPosition()) === null || _a === void 0 ? void 0 : _a.lat(),\n          longitude: (_b = marker.getPosition()) === null || _b === void 0 ? void 0 : _b.lng(),\n          title: marker.getTitle(),\n          snippet: ''\n        });\n      });\n      marker.addListener('dragend', () => {\n        var _a, _b;\n        _this28.notifyListeners('onMarkerDragEnd', {\n          mapId: mapId,\n          markerId: markerId,\n          latitude: (_a = marker.getPosition()) === null || _a === void 0 ? void 0 : _a.lat(),\n          longitude: (_b = marker.getPosition()) === null || _b === void 0 ? void 0 : _b.lng(),\n          title: marker.getTitle(),\n          snippet: ''\n        });\n      });\n    })();\n  }\n  setMapListeners(mapId) {\n    var _this29 = this;\n    return _asyncToGenerator(function* () {\n      const map = _this29.maps[mapId].map;\n      map.addListener('idle', /*#__PURE__*/_asyncToGenerator(function* () {\n        var _a, _b;\n        const bounds = yield _this29.getMapBounds({\n          id: mapId\n        });\n        _this29.notifyListeners('onCameraIdle', {\n          mapId: mapId,\n          bearing: map.getHeading(),\n          bounds: bounds,\n          latitude: (_a = map.getCenter()) === null || _a === void 0 ? void 0 : _a.lat(),\n          longitude: (_b = map.getCenter()) === null || _b === void 0 ? void 0 : _b.lng(),\n          tilt: map.getTilt(),\n          zoom: map.getZoom()\n        });\n      }));\n      map.addListener('center_changed', () => {\n        _this29.notifyListeners('onCameraMoveStarted', {\n          mapId: mapId,\n          isGesture: true\n        });\n      });\n      map.addListener('bounds_changed', /*#__PURE__*/_asyncToGenerator(function* () {\n        var _a, _b;\n        const bounds = yield _this29.getMapBounds({\n          id: mapId\n        });\n        _this29.notifyListeners('onBoundsChanged', {\n          mapId: mapId,\n          bearing: map.getHeading(),\n          bounds: bounds,\n          latitude: (_a = map.getCenter()) === null || _a === void 0 ? void 0 : _a.lat(),\n          longitude: (_b = map.getCenter()) === null || _b === void 0 ? void 0 : _b.lng(),\n          tilt: map.getTilt(),\n          zoom: map.getZoom()\n        });\n      }));\n      map.addListener('click', e => {\n        var _a, _b;\n        _this29.notifyListeners('onMapClick', {\n          mapId: mapId,\n          latitude: (_a = e.latLng) === null || _a === void 0 ? void 0 : _a.lat(),\n          longitude: (_b = e.latLng) === null || _b === void 0 ? void 0 : _b.lng()\n        });\n      });\n      _this29.notifyListeners('onMapReady', {\n        mapId: mapId\n      });\n    })();\n  }\n  buildMarkerOpts(marker, map) {\n    let iconImage = undefined;\n    if (marker.iconUrl) {\n      iconImage = {\n        url: marker.iconUrl,\n        scaledSize: marker.iconSize ? new google.maps.Size(marker.iconSize.width, marker.iconSize.height) : null,\n        anchor: marker.iconAnchor ? new google.maps.Point(marker.iconAnchor.x, marker.iconAnchor.y) : new google.maps.Point(0, 0),\n        origin: marker.iconOrigin ? new google.maps.Point(marker.iconOrigin.x, marker.iconOrigin.y) : new google.maps.Point(0, 0)\n      };\n    }\n    const opts = {\n      position: marker.coordinate,\n      map: map,\n      opacity: marker.opacity,\n      title: marker.title,\n      icon: iconImage,\n      draggable: marker.draggable,\n      zIndex: marker.zIndex\n    };\n    return opts;\n  }\n}","map":{"version":3,"names":["WebPlugin","MarkerClusterer","SuperClusterAlgorithm","MapType","LatLngBounds","CapacitorGoogleMapsWeb","constructor","arguments","gMapsRef","undefined","maps","currMarkerId","currPolygonId","currCircleId","currPolylineId","onClusterClickHandler","_","cluster","map","_a","_b","mapId","getIdFromMap","items","markers","marker","markerId","getIdFromMarker","push","latitude","getPosition","lat","longitude","lng","title","getTitle","snippet","notifyListeners","position","size","count","id","importGoogleLib","apiKey","region","language","_this","_asyncToGenerator","lib","loader","Loader","version","libraries","google","load","console","log","setCamera","_args","_this2","moveCamera","center","config","coordinate","heading","bearing","tilt","angle","zoom","getMapType","_this3","type","getMapTypeId","Normal","Error","setMapType","_this4","mapType","toLowerCase","setMapTypeId","enableIndoorMaps","enableTrafficLayer","_this5","trafficLayer","TrafficLayer","enabled","setMap","enableAccessibilityElements","dispatchMapEvent","enableCurrentLocation","_this6","navigator","geolocation","getCurrentPosition","pos","coords","setCenter","setPadding","_this7","bounds","getBounds","fitBounds","padding","getMapBounds","_this8","southwest","getSouthWest","getCenter","northeast","getNorthEast","addMarkers","_this9","markerIds","markerArgs","markerOpts","buildMarkerOpts","Marker","setMarkerListeners","ids","addMarker","_this10","removeMarkers","_this11","removeMarker","_this12","addPolygons","args","_this13","polygonIds","polygonArgs","polygons","polygon","Polygon","setPolygonListeners","removePolygons","_this14","addCircles","_this15","circleIds","circleArgs","circles","circle","Circle","setCircleListeners","removeCircles","_this16","addPolylines","_this17","lineIds","polylineArgs","polylines","polyline","Polyline","set","tag","setPolylineListeners","removePolylines","_this18","polylineIds","enableClustering","_this19","markerClusterer","algorithm","minPoints","minClusterSize","onClusterClick","disableClustering","_this20","onScroll","create","_this21","window","Map","element","Object","assign","setMapListeners","destroy","_this22","mapItem","innerHTML","unbindAll","mapBoundsContains","_this23","getLatLngBounds","point","LatLng","contains","mapBoundsExtend","_this24","extend","result","circleId","_this25","addListener","get","polygonId","_this26","polylineId","_this27","_this28","_this29","getHeading","getTilt","getZoom","isGesture","e","latLng","iconImage","iconUrl","url","scaledSize","iconSize","Size","width","height","anchor","iconAnchor","Point","x","y","origin","iconOrigin","opts","opacity","icon","draggable","zIndex"],"sources":["/home/yimnai_dev/PROJECTS/fet/Internet_Mobile_Programming/digitekisi-mobile/node_modules/.pnpm/@capacitor+google-maps@5.1.2_@capacitor+core@5.0.5/node_modules/@capacitor/google-maps/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { MarkerClusterer, SuperClusterAlgorithm, } from '@googlemaps/markerclusterer';\nimport { MapType, LatLngBounds } from './definitions';\nexport class CapacitorGoogleMapsWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.gMapsRef = undefined;\n        this.maps = {};\n        this.currMarkerId = 0;\n        this.currPolygonId = 0;\n        this.currCircleId = 0;\n        this.currPolylineId = 0;\n        this.onClusterClickHandler = (_, cluster, map) => {\n            var _a, _b;\n            const mapId = this.getIdFromMap(map);\n            const items = [];\n            if (cluster.markers != undefined) {\n                for (const marker of cluster.markers) {\n                    const markerId = this.getIdFromMarker(mapId, marker);\n                    items.push({\n                        markerId: markerId,\n                        latitude: (_a = marker.getPosition()) === null || _a === void 0 ? void 0 : _a.lat(),\n                        longitude: (_b = marker.getPosition()) === null || _b === void 0 ? void 0 : _b.lng(),\n                        title: marker.getTitle(),\n                        snippet: '',\n                    });\n                }\n            }\n            this.notifyListeners('onClusterClick', {\n                mapId: mapId,\n                latitude: cluster.position.lat(),\n                longitude: cluster.position.lng(),\n                size: cluster.count,\n                items: items,\n            });\n        };\n    }\n    getIdFromMap(map) {\n        for (const id in this.maps) {\n            if (this.maps[id].map == map) {\n                return id;\n            }\n        }\n        return '';\n    }\n    getIdFromMarker(mapId, marker) {\n        for (const id in this.maps[mapId].markers) {\n            if (this.maps[mapId].markers[id] == marker) {\n                return id;\n            }\n        }\n        return '';\n    }\n    async importGoogleLib(apiKey, region, language) {\n        if (this.gMapsRef === undefined) {\n            const lib = await import('@googlemaps/js-api-loader');\n            const loader = new lib.Loader({\n                apiKey: apiKey !== null && apiKey !== void 0 ? apiKey : '',\n                version: 'weekly',\n                libraries: ['places'],\n                language,\n                region,\n            });\n            const google = await loader.load();\n            this.gMapsRef = google.maps;\n            console.log('Loaded google maps API');\n        }\n    }\n    async setCamera(_args) {\n        // Animation not supported yet...\n        this.maps[_args.id].map.moveCamera({\n            center: _args.config.coordinate,\n            heading: _args.config.bearing,\n            tilt: _args.config.angle,\n            zoom: _args.config.zoom,\n        });\n    }\n    async getMapType(_args) {\n        let type = this.maps[_args.id].map.getMapTypeId();\n        if (type !== undefined) {\n            if (type === 'roadmap') {\n                type = MapType.Normal;\n            }\n            return { type };\n        }\n        throw new Error('Map type is undefined');\n    }\n    async setMapType(_args) {\n        let mapType = _args.mapType.toLowerCase();\n        if (mapType === MapType.Normal) {\n            mapType = 'roadmap';\n        }\n        this.maps[_args.id].map.setMapTypeId(mapType);\n    }\n    async enableIndoorMaps(_args) {\n        throw new Error('Method not supported on web.');\n    }\n    async enableTrafficLayer(_args) {\n        var _a;\n        const trafficLayer = (_a = this.maps[_args.id].trafficLayer) !== null && _a !== void 0 ? _a : new google.maps.TrafficLayer();\n        if (_args.enabled) {\n            trafficLayer.setMap(this.maps[_args.id].map);\n            this.maps[_args.id].trafficLayer = trafficLayer;\n        }\n        else if (this.maps[_args.id].trafficLayer) {\n            trafficLayer.setMap(null);\n            this.maps[_args.id].trafficLayer = undefined;\n        }\n    }\n    async enableAccessibilityElements(_args) {\n        throw new Error('Method not supported on web.');\n    }\n    dispatchMapEvent(_args) {\n        throw new Error('Method not supported on web.');\n    }\n    async enableCurrentLocation(_args) {\n        if (_args.enabled) {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition((position) => {\n                    const pos = {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    };\n                    this.maps[_args.id].map.setCenter(pos);\n                    this.notifyListeners('onMyLocationButtonClick', {});\n                    this.notifyListeners('onMyLocationClick', {});\n                }, () => {\n                    throw new Error('Geolocation not supported on web browser.');\n                });\n            }\n            else {\n                throw new Error('Geolocation not supported on web browser.');\n            }\n        }\n    }\n    async setPadding(_args) {\n        const bounds = this.maps[_args.id].map.getBounds();\n        if (bounds !== undefined) {\n            this.maps[_args.id].map.fitBounds(bounds, _args.padding);\n        }\n    }\n    async getMapBounds(_args) {\n        const bounds = this.maps[_args.id].map.getBounds();\n        if (!bounds) {\n            throw new Error('Google Map Bounds could not be found.');\n        }\n        return new LatLngBounds({\n            southwest: {\n                lat: bounds.getSouthWest().lat(),\n                lng: bounds.getSouthWest().lng(),\n            },\n            center: {\n                lat: bounds.getCenter().lat(),\n                lng: bounds.getCenter().lng(),\n            },\n            northeast: {\n                lat: bounds.getNorthEast().lat(),\n                lng: bounds.getNorthEast().lng(),\n            },\n        });\n    }\n    async addMarkers(_args) {\n        const markerIds = [];\n        const map = this.maps[_args.id];\n        for (const markerArgs of _args.markers) {\n            const markerOpts = this.buildMarkerOpts(markerArgs, map.map);\n            const marker = new google.maps.Marker(markerOpts);\n            const id = '' + this.currMarkerId;\n            map.markers[id] = marker;\n            this.setMarkerListeners(_args.id, id, marker);\n            markerIds.push(id);\n            this.currMarkerId++;\n        }\n        return { ids: markerIds };\n    }\n    async addMarker(_args) {\n        const markerOpts = this.buildMarkerOpts(_args.marker, this.maps[_args.id].map);\n        const marker = new google.maps.Marker(markerOpts);\n        const id = '' + this.currMarkerId;\n        this.maps[_args.id].markers[id] = marker;\n        this.setMarkerListeners(_args.id, id, marker);\n        this.currMarkerId++;\n        return { id: id };\n    }\n    async removeMarkers(_args) {\n        const map = this.maps[_args.id];\n        for (const id of _args.markerIds) {\n            map.markers[id].setMap(null);\n            delete map.markers[id];\n        }\n    }\n    async removeMarker(_args) {\n        this.maps[_args.id].markers[_args.markerId].setMap(null);\n        delete this.maps[_args.id].markers[_args.markerId];\n    }\n    async addPolygons(args) {\n        const polygonIds = [];\n        const map = this.maps[args.id];\n        for (const polygonArgs of args.polygons) {\n            const polygon = new google.maps.Polygon(polygonArgs);\n            polygon.setMap(map.map);\n            const id = '' + this.currPolygonId;\n            this.maps[args.id].polygons[id] = polygon;\n            this.setPolygonListeners(args.id, id, polygon);\n            polygonIds.push(id);\n            this.currPolygonId++;\n        }\n        return { ids: polygonIds };\n    }\n    async removePolygons(args) {\n        const map = this.maps[args.id];\n        for (const id of args.polygonIds) {\n            map.polygons[id].setMap(null);\n            delete map.polygons[id];\n        }\n    }\n    async addCircles(args) {\n        const circleIds = [];\n        const map = this.maps[args.id];\n        for (const circleArgs of args.circles) {\n            const circle = new google.maps.Circle(circleArgs);\n            circle.setMap(map.map);\n            const id = '' + this.currCircleId;\n            this.maps[args.id].circles[id] = circle;\n            this.setCircleListeners(args.id, id, circle);\n            circleIds.push(id);\n            this.currCircleId++;\n        }\n        return { ids: circleIds };\n    }\n    async removeCircles(args) {\n        const map = this.maps[args.id];\n        for (const id of args.circleIds) {\n            map.circles[id].setMap(null);\n            delete map.circles[id];\n        }\n    }\n    async addPolylines(args) {\n        const lineIds = [];\n        const map = this.maps[args.id];\n        for (const polylineArgs of args.polylines) {\n            const polyline = new google.maps.Polyline(polylineArgs);\n            polyline.set('tag', polylineArgs.tag);\n            polyline.setMap(map.map);\n            const id = '' + this.currPolylineId;\n            this.maps[args.id].polylines[id] = polyline;\n            this.setPolylineListeners(args.id, id, polyline);\n            lineIds.push(id);\n            this.currPolylineId++;\n        }\n        return {\n            ids: lineIds,\n        };\n    }\n    async removePolylines(args) {\n        const map = this.maps[args.id];\n        for (const id of args.polylineIds) {\n            map.polylines[id].setMap(null);\n            delete map.polylines[id];\n        }\n    }\n    async enableClustering(_args) {\n        var _a;\n        const markers = [];\n        for (const id in this.maps[_args.id].markers) {\n            markers.push(this.maps[_args.id].markers[id]);\n        }\n        this.maps[_args.id].markerClusterer = new MarkerClusterer({\n            map: this.maps[_args.id].map,\n            markers: markers,\n            algorithm: new SuperClusterAlgorithm({\n                minPoints: (_a = _args.minClusterSize) !== null && _a !== void 0 ? _a : 4,\n            }),\n            onClusterClick: this.onClusterClickHandler,\n        });\n    }\n    async disableClustering(_args) {\n        var _a;\n        (_a = this.maps[_args.id].markerClusterer) === null || _a === void 0 ? void 0 : _a.setMap(null);\n        this.maps[_args.id].markerClusterer = undefined;\n    }\n    async onScroll(_args) {\n        throw new Error('Method not supported on web.');\n    }\n    async create(_args) {\n        console.log(`Create map: ${_args.id}`);\n        await this.importGoogleLib(_args.apiKey, _args.region, _args.language);\n        this.maps[_args.id] = {\n            map: new window.google.maps.Map(_args.element, Object.assign({}, _args.config)),\n            element: _args.element,\n            markers: {},\n            polygons: {},\n            circles: {},\n            polylines: {},\n        };\n        this.setMapListeners(_args.id);\n    }\n    async destroy(_args) {\n        console.log(`Destroy map: ${_args.id}`);\n        const mapItem = this.maps[_args.id];\n        mapItem.element.innerHTML = '';\n        mapItem.map.unbindAll();\n        delete this.maps[_args.id];\n    }\n    async mapBoundsContains(_args) {\n        const bounds = this.getLatLngBounds(_args.bounds);\n        const point = new google.maps.LatLng(_args.point.lat, _args.point.lng);\n        return { contains: bounds.contains(point) };\n    }\n    async mapBoundsExtend(_args) {\n        const bounds = this.getLatLngBounds(_args.bounds);\n        const point = new google.maps.LatLng(_args.point.lat, _args.point.lng);\n        bounds.extend(point);\n        const result = new LatLngBounds({\n            southwest: {\n                lat: bounds.getSouthWest().lat(),\n                lng: bounds.getSouthWest().lng(),\n            },\n            center: {\n                lat: bounds.getCenter().lat(),\n                lng: bounds.getCenter().lng(),\n            },\n            northeast: {\n                lat: bounds.getNorthEast().lat(),\n                lng: bounds.getNorthEast().lng(),\n            },\n        });\n        return { bounds: result };\n    }\n    getLatLngBounds(_args) {\n        return new google.maps.LatLngBounds(new google.maps.LatLng(_args.southwest.lat, _args.southwest.lng), new google.maps.LatLng(_args.northeast.lat, _args.northeast.lng));\n    }\n    async setCircleListeners(mapId, circleId, circle) {\n        circle.addListener('click', () => {\n            this.notifyListeners('onCircleClick', {\n                mapId: mapId,\n                circleId: circleId,\n                tag: circle.get('tag'),\n            });\n        });\n    }\n    async setPolygonListeners(mapId, polygonId, polygon) {\n        polygon.addListener('click', () => {\n            this.notifyListeners('onPolygonClick', {\n                mapId: mapId,\n                polygonId: polygonId,\n                tag: polygon.get('tag'),\n            });\n        });\n    }\n    async setPolylineListeners(mapId, polylineId, polyline) {\n        polyline.addListener('click', () => {\n            this.notifyListeners('onPolylineClick', {\n                mapId: mapId,\n                polylineId: polylineId,\n                tag: polyline.get('tag'),\n            });\n        });\n    }\n    async setMarkerListeners(mapId, markerId, marker) {\n        marker.addListener('click', () => {\n            var _a, _b;\n            this.notifyListeners('onMarkerClick', {\n                mapId: mapId,\n                markerId: markerId,\n                latitude: (_a = marker.getPosition()) === null || _a === void 0 ? void 0 : _a.lat(),\n                longitude: (_b = marker.getPosition()) === null || _b === void 0 ? void 0 : _b.lng(),\n                title: marker.getTitle(),\n                snippet: '',\n            });\n        });\n        marker.addListener('dragstart', () => {\n            var _a, _b;\n            this.notifyListeners('onMarkerDragStart', {\n                mapId: mapId,\n                markerId: markerId,\n                latitude: (_a = marker.getPosition()) === null || _a === void 0 ? void 0 : _a.lat(),\n                longitude: (_b = marker.getPosition()) === null || _b === void 0 ? void 0 : _b.lng(),\n                title: marker.getTitle(),\n                snippet: '',\n            });\n        });\n        marker.addListener('drag', () => {\n            var _a, _b;\n            this.notifyListeners('onMarkerDrag', {\n                mapId: mapId,\n                markerId: markerId,\n                latitude: (_a = marker.getPosition()) === null || _a === void 0 ? void 0 : _a.lat(),\n                longitude: (_b = marker.getPosition()) === null || _b === void 0 ? void 0 : _b.lng(),\n                title: marker.getTitle(),\n                snippet: '',\n            });\n        });\n        marker.addListener('dragend', () => {\n            var _a, _b;\n            this.notifyListeners('onMarkerDragEnd', {\n                mapId: mapId,\n                markerId: markerId,\n                latitude: (_a = marker.getPosition()) === null || _a === void 0 ? void 0 : _a.lat(),\n                longitude: (_b = marker.getPosition()) === null || _b === void 0 ? void 0 : _b.lng(),\n                title: marker.getTitle(),\n                snippet: '',\n            });\n        });\n    }\n    async setMapListeners(mapId) {\n        const map = this.maps[mapId].map;\n        map.addListener('idle', async () => {\n            var _a, _b;\n            const bounds = await this.getMapBounds({ id: mapId });\n            this.notifyListeners('onCameraIdle', {\n                mapId: mapId,\n                bearing: map.getHeading(),\n                bounds: bounds,\n                latitude: (_a = map.getCenter()) === null || _a === void 0 ? void 0 : _a.lat(),\n                longitude: (_b = map.getCenter()) === null || _b === void 0 ? void 0 : _b.lng(),\n                tilt: map.getTilt(),\n                zoom: map.getZoom(),\n            });\n        });\n        map.addListener('center_changed', () => {\n            this.notifyListeners('onCameraMoveStarted', {\n                mapId: mapId,\n                isGesture: true,\n            });\n        });\n        map.addListener('bounds_changed', async () => {\n            var _a, _b;\n            const bounds = await this.getMapBounds({ id: mapId });\n            this.notifyListeners('onBoundsChanged', {\n                mapId: mapId,\n                bearing: map.getHeading(),\n                bounds: bounds,\n                latitude: (_a = map.getCenter()) === null || _a === void 0 ? void 0 : _a.lat(),\n                longitude: (_b = map.getCenter()) === null || _b === void 0 ? void 0 : _b.lng(),\n                tilt: map.getTilt(),\n                zoom: map.getZoom(),\n            });\n        });\n        map.addListener('click', (e) => {\n            var _a, _b;\n            this.notifyListeners('onMapClick', {\n                mapId: mapId,\n                latitude: (_a = e.latLng) === null || _a === void 0 ? void 0 : _a.lat(),\n                longitude: (_b = e.latLng) === null || _b === void 0 ? void 0 : _b.lng(),\n            });\n        });\n        this.notifyListeners('onMapReady', {\n            mapId: mapId,\n        });\n    }\n    buildMarkerOpts(marker, map) {\n        let iconImage = undefined;\n        if (marker.iconUrl) {\n            iconImage = {\n                url: marker.iconUrl,\n                scaledSize: marker.iconSize\n                    ? new google.maps.Size(marker.iconSize.width, marker.iconSize.height)\n                    : null,\n                anchor: marker.iconAnchor\n                    ? new google.maps.Point(marker.iconAnchor.x, marker.iconAnchor.y)\n                    : new google.maps.Point(0, 0),\n                origin: marker.iconOrigin\n                    ? new google.maps.Point(marker.iconOrigin.x, marker.iconOrigin.y)\n                    : new google.maps.Point(0, 0),\n            };\n        }\n        const opts = {\n            position: marker.coordinate,\n            map: map,\n            opacity: marker.opacity,\n            title: marker.title,\n            icon: iconImage,\n            draggable: marker.draggable,\n            zIndex: marker.zIndex,\n        };\n        return opts;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}